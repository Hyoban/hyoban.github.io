{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce \u8fd9\u91cc\u4f1a\u5b58\u653e\u6211\u7684\u7b14\u8bb0\uff0c\u5e0c\u671b\u5199\u7684\u4e1c\u897f\u6709\u4e9b\u80fd\u5e2e\u5230\u4f60\u3002 \u8054\u7cfb\u65b9\u5f0f hyoban@qq.com","title":"\u4e3b\u9875"},{"location":"#\u6b22\u8fce","text":"\u8fd9\u91cc\u4f1a\u5b58\u653e\u6211\u7684\u7b14\u8bb0\uff0c\u5e0c\u671b\u5199\u7684\u4e1c\u897f\u6709\u4e9b\u80fd\u5e2e\u5230\u4f60\u3002","title":"\u6b22\u8fce"},{"location":"#\u8054\u7cfb\u65b9\u5f0f","text":"hyoban@qq.com","title":"\u8054\u7cfb\u65b9\u5f0f"},{"location":"android/activity-result-contracts/","text":"\u4f7f\u7528 Intent \u542f\u52a8\u7cfb\u7edf\u7ec4\u4ef6 \u5b89\u5353\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u8c03\u7528\u4e00\u4e9b\u7cfb\u7edf\u7684\u7ec4\u4ef6\uff0c\u6bd4\u5982\u76f8\u673a\uff0c\u9009\u62e9\u6587\u4ef6\u7b49\u3002\u4e0b\u9762\u6211\u4eec\u4ee5\u9009\u62e9\u76f8\u518c\u4e2d\u7684\u56fe\u7247\u5e76\u5c55\u793a\u8fd9\u4e2a\u4f8b\u5b50\u6765\u8bb2\u89e3\u3002 \u4ece\u524d\u6211\u4eec\u662f\u600e\u4e48\u505a\u7684 \u57fa\u672c\u6b65\u9aa4\u662f \u5b9a\u4e49\u4e00\u4e2a\u83b7\u53d6\u4ece\u7cfb\u7edf\u6587\u4ef6\u9009\u62e9\u5668\u4e2d\u83b7\u53d6\u56fe\u7247\u7684 Intent \u4f7f\u7528 startActivityForResult \u6765\u542f\u52a8 Activity \u5728 onActivityResult \u7684\u56de\u8c03\u4e2d\u5904\u7406\u8fd4\u56de\u7684 uri \u6570\u636e \u5f53\u7136\u6211\u4eec\u9700\u8981\u5c06\u62ff\u5230\u7684 uri \u8f6c\u6210 bitmap \u624d\u80fd\u52a0\u8f7d\u5230 imageview \u4e0a const val IMAGE_MIME_TYPE = \"image/*\" const val IMAGE_PICKER_REQUEST_CODE = 1 private fun selectImage () { val intent = Intent ( Intent . ACTION_GET_CONTENT ). apply { type = IMAGE_MIME_TYPE } startActivityForResult ( intent , IMAGE_PICKER_REQUEST_CODE ) } override fun onActivityResult ( requestCode : Int , resultCode : Int , resultData : Intent?) { super . onActivityResult ( requestCode , resultCode , resultData ) if ( requestCode == IMAGE_PICKER_REQUEST_CODE && resultCode == RESULT_OK ) { resultData ?. data ?. let { uri -> activity ?. let { binding . preview . setImageBitmap ( BitmapFactory . decodeStream ( it . contentResolver . openInputStream ( uri )) ) } } } } \u4e0d\u8fc7\u7531\u4e8e\u8026\u5408\u4e25\u91cd\u548c\u4e00\u5927\u5806 requestcode \uff0c\u73b0\u5728 startActivityForResult \u5df2\u7ecf\u88ab\u5e9f\u5f03\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 registerForActivityResult \u3002 \u65b0\u7684\u5199\u6cd5 private val processingPictures = registerForActivityResult ( ActivityResultContracts . StartActivityForResult ()) { if ( it . resultCode == RESULT_OK ) { it . data ?. data . let { uri -> } } } fun selectImage () { val intent = Intent ( Intent . ACTION_GET_CONTENT ). apply { type = IMAGE_MIME_TYPE } processingPictures . launch ( intent ) } \u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u542f\u52a8\u5668\uff0c\u6307\u5b9a\u542f\u52a8\u9700\u8981\u7684\u534f\u8bae\uff0c\u7136\u540e\u4f7f\u7528 launch \u51fd\u6570\u542f\u52a8\u5373\u53ef\u3002 abstract class ActivityResultContract < I , O > \u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c ActivityResultContract \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u7684\u8303\u578b\u53c2\u6570\u5206\u522b\u4e3a\uff0c\u6211\u4eec\u542f\u52a8\u7684\u65f6\u9700\u8981\u6307\u5b9a\u7684\u53c2\u6570\u548c\u5728\u56de\u8c03\u4e2d\u6211\u4eec\u80fd\u591f\u83b7\u53d6\u5230\u7684\u6570\u636e\u3002\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u81ea\u5df1\u7684\u534f\u8bae\u7c7b\uff0c\u800c\u8fd9\u91cc\u91c7\u7528\u4e86\u7cfb\u7edf\u9884\u7f6e\u7684\u901a\u7528\u7684 StartActivityForResult \uff0c\u6574\u4f53\u5199\u6cd5\u548c\u4e4b\u524d\u8fd8\u662f\u5f88\u7c7b\u4f3c\u7684\u3002 \u5f88\u68d2\uff0c\u6211\u4eec\u4e0d\u7528\u5b9a\u4e49 requestcode \u4e86\uff0c\u4e5f\u4e0d\u7528\u5728\u6df7\u7740\u5404\u79cd\u5185\u5bb9\u7684 onActivityResult \u4e2d\u8fdb\u884c\u64cd\u4f5c\u4e86\u3002\u4f46\u8fd8\u53ef\u4ee5\u66f4\u52a0\u7b80\u5355\u4e00\u70b9\u3002 private val processingPictures = registerForActivityResult ( ActivityResultContracts . GetContent ()) { uri -> } fun selectImage () { processingPictures . launch ( IMAGE_MIME_TYPE ) } \u4ece\u6587\u4ef6\u7ba1\u7406\u5668\u4e2d\u83b7\u53d6\u5185\u5bb9\u662f\u7cfb\u7edf\u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u9884\u7f6e\u534f\u8bae\uff0c\u6211\u4eec\u5c06 Contract \u6307\u5b9a\u4e3a GetContent public static class GetContent extends ActivityResultContract < String , Uri > \u6211\u4eec\u9700\u8981\u5728 launch \u51fd\u6570\u4e2d\u6307\u5b9a\u9009\u62e9\u6587\u4ef6\u7684\u7c7b\u578b\uff0c\u8fd9\u91cc\u548c\u4e4b\u524d\u4e00\u6837\u6307\u5b9a\u4e3a \"image/*\" \u5373\u53ef\uff0c\u5728\u56de\u8c03\u4e2d\u62ff\u5230 uri \u3002 \u4ece\u76f8\u673a\u62cd\u4e00\u5f20\uff1f \u5c06\u534f\u8bae\u6307\u5b9a\u4e3a TakePicture \u5373\u53ef\uff0c launch \u51fd\u6570\u4e2d\u4f20\u9012\u4fdd\u5b58\u56fe\u7247\u5730\u5740\u7684 uri \uff0c\u8bf7\u6ce8\u610f\u56de\u8c03\u4e2d\u6211\u4eec\u53ea\u80fd\u62ff\u5230\u662f\u5426\u62cd\u7167\u6210\u529f\u7684\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u4e00\u822c\u9700\u8981\u8bb0\u5f55\u4e0b\u4f20\u9012\u7684 uri \u4fbf\u4e8e\u4f7f\u7528\u62cd\u6444\u7684\u7167\u7247\u3002 \u5bf9\u4e8e\u56de\u8c03\u4e2d\u7684\u5904\u7406\u662f\u8fd9\u6837\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u62ff\u5230\u662f\u5426\u62cd\u6444\u6210\u529f\u7684\u4fe1\u606f\uff0c\u5982\u679c\u62cd\u6444\u6210\u529f\uff0c\u4e4b\u524d\u8bb0\u5f55\u4e0b\u7684 uri \u5c31\u80fd\u52a0\u8f7d\u51fa\u56fe\u7247\u4e86\u3002 val filename = \" ${ System . currentTimeMillis () } .jpg\" val imageUri = if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . Q ) { MediaStore . Images . Media . getContentUri ( MediaStore . VOLUME_EXTERNAL_PRIMARY ) } else { MediaStore . Images . Media . EXTERNAL_CONTENT_URI } val imageDetails = ContentValues (). apply { put ( MediaStore . Images . Media . DISPLAY_NAME , filename ) } context . contentResolver . insert ( imageUri , imageDetails ). let { takenPictureUri = it launcherFromCamera . launch ( takenPictureUri ) } \u5bf9\u4e8e\u4f20\u9012\u7684 uri \uff0c\u6211\u4eec\u9700\u8981\u5148\u81ea\u5df1\u6784\u5efa\u51fa\uff0c\u8fd9\u91cc\u6211\u4eec\u6307\u5b9a\u51fa\u6587\u4ef6\u540d\u5e76\u586b\u5145\u5373\u53ef\u3002 \u53c2\u8003 \u518d\u89c1\uff01onActivityResult\uff01\u4f60\u597d\uff0cActivity Results API\uff01","title":"\u4f7f\u7528 Intent \u542f\u52a8\u7cfb\u7edf\u7ec4\u4ef6"},{"location":"android/activity-result-contracts/#\u4f7f\u7528-intent-\u542f\u52a8\u7cfb\u7edf\u7ec4\u4ef6","text":"\u5b89\u5353\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u8c03\u7528\u4e00\u4e9b\u7cfb\u7edf\u7684\u7ec4\u4ef6\uff0c\u6bd4\u5982\u76f8\u673a\uff0c\u9009\u62e9\u6587\u4ef6\u7b49\u3002\u4e0b\u9762\u6211\u4eec\u4ee5\u9009\u62e9\u76f8\u518c\u4e2d\u7684\u56fe\u7247\u5e76\u5c55\u793a\u8fd9\u4e2a\u4f8b\u5b50\u6765\u8bb2\u89e3\u3002","title":"\u4f7f\u7528 Intent \u542f\u52a8\u7cfb\u7edf\u7ec4\u4ef6"},{"location":"android/activity-result-contracts/#\u4ece\u524d\u6211\u4eec\u662f\u600e\u4e48\u505a\u7684","text":"\u57fa\u672c\u6b65\u9aa4\u662f \u5b9a\u4e49\u4e00\u4e2a\u83b7\u53d6\u4ece\u7cfb\u7edf\u6587\u4ef6\u9009\u62e9\u5668\u4e2d\u83b7\u53d6\u56fe\u7247\u7684 Intent \u4f7f\u7528 startActivityForResult \u6765\u542f\u52a8 Activity \u5728 onActivityResult \u7684\u56de\u8c03\u4e2d\u5904\u7406\u8fd4\u56de\u7684 uri \u6570\u636e \u5f53\u7136\u6211\u4eec\u9700\u8981\u5c06\u62ff\u5230\u7684 uri \u8f6c\u6210 bitmap \u624d\u80fd\u52a0\u8f7d\u5230 imageview \u4e0a const val IMAGE_MIME_TYPE = \"image/*\" const val IMAGE_PICKER_REQUEST_CODE = 1 private fun selectImage () { val intent = Intent ( Intent . ACTION_GET_CONTENT ). apply { type = IMAGE_MIME_TYPE } startActivityForResult ( intent , IMAGE_PICKER_REQUEST_CODE ) } override fun onActivityResult ( requestCode : Int , resultCode : Int , resultData : Intent?) { super . onActivityResult ( requestCode , resultCode , resultData ) if ( requestCode == IMAGE_PICKER_REQUEST_CODE && resultCode == RESULT_OK ) { resultData ?. data ?. let { uri -> activity ?. let { binding . preview . setImageBitmap ( BitmapFactory . decodeStream ( it . contentResolver . openInputStream ( uri )) ) } } } } \u4e0d\u8fc7\u7531\u4e8e\u8026\u5408\u4e25\u91cd\u548c\u4e00\u5927\u5806 requestcode \uff0c\u73b0\u5728 startActivityForResult \u5df2\u7ecf\u88ab\u5e9f\u5f03\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 registerForActivityResult \u3002","title":"\u4ece\u524d\u6211\u4eec\u662f\u600e\u4e48\u505a\u7684"},{"location":"android/activity-result-contracts/#\u65b0\u7684\u5199\u6cd5","text":"private val processingPictures = registerForActivityResult ( ActivityResultContracts . StartActivityForResult ()) { if ( it . resultCode == RESULT_OK ) { it . data ?. data . let { uri -> } } } fun selectImage () { val intent = Intent ( Intent . ACTION_GET_CONTENT ). apply { type = IMAGE_MIME_TYPE } processingPictures . launch ( intent ) } \u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u542f\u52a8\u5668\uff0c\u6307\u5b9a\u542f\u52a8\u9700\u8981\u7684\u534f\u8bae\uff0c\u7136\u540e\u4f7f\u7528 launch \u51fd\u6570\u542f\u52a8\u5373\u53ef\u3002 abstract class ActivityResultContract < I , O > \u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c ActivityResultContract \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u7684\u8303\u578b\u53c2\u6570\u5206\u522b\u4e3a\uff0c\u6211\u4eec\u542f\u52a8\u7684\u65f6\u9700\u8981\u6307\u5b9a\u7684\u53c2\u6570\u548c\u5728\u56de\u8c03\u4e2d\u6211\u4eec\u80fd\u591f\u83b7\u53d6\u5230\u7684\u6570\u636e\u3002\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u81ea\u5df1\u7684\u534f\u8bae\u7c7b\uff0c\u800c\u8fd9\u91cc\u91c7\u7528\u4e86\u7cfb\u7edf\u9884\u7f6e\u7684\u901a\u7528\u7684 StartActivityForResult \uff0c\u6574\u4f53\u5199\u6cd5\u548c\u4e4b\u524d\u8fd8\u662f\u5f88\u7c7b\u4f3c\u7684\u3002 \u5f88\u68d2\uff0c\u6211\u4eec\u4e0d\u7528\u5b9a\u4e49 requestcode \u4e86\uff0c\u4e5f\u4e0d\u7528\u5728\u6df7\u7740\u5404\u79cd\u5185\u5bb9\u7684 onActivityResult \u4e2d\u8fdb\u884c\u64cd\u4f5c\u4e86\u3002\u4f46\u8fd8\u53ef\u4ee5\u66f4\u52a0\u7b80\u5355\u4e00\u70b9\u3002 private val processingPictures = registerForActivityResult ( ActivityResultContracts . GetContent ()) { uri -> } fun selectImage () { processingPictures . launch ( IMAGE_MIME_TYPE ) } \u4ece\u6587\u4ef6\u7ba1\u7406\u5668\u4e2d\u83b7\u53d6\u5185\u5bb9\u662f\u7cfb\u7edf\u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u9884\u7f6e\u534f\u8bae\uff0c\u6211\u4eec\u5c06 Contract \u6307\u5b9a\u4e3a GetContent public static class GetContent extends ActivityResultContract < String , Uri > \u6211\u4eec\u9700\u8981\u5728 launch \u51fd\u6570\u4e2d\u6307\u5b9a\u9009\u62e9\u6587\u4ef6\u7684\u7c7b\u578b\uff0c\u8fd9\u91cc\u548c\u4e4b\u524d\u4e00\u6837\u6307\u5b9a\u4e3a \"image/*\" \u5373\u53ef\uff0c\u5728\u56de\u8c03\u4e2d\u62ff\u5230 uri \u3002","title":"\u65b0\u7684\u5199\u6cd5"},{"location":"android/activity-result-contracts/#\u4ece\u76f8\u673a\u62cd\u4e00\u5f20","text":"\u5c06\u534f\u8bae\u6307\u5b9a\u4e3a TakePicture \u5373\u53ef\uff0c launch \u51fd\u6570\u4e2d\u4f20\u9012\u4fdd\u5b58\u56fe\u7247\u5730\u5740\u7684 uri \uff0c\u8bf7\u6ce8\u610f\u56de\u8c03\u4e2d\u6211\u4eec\u53ea\u80fd\u62ff\u5230\u662f\u5426\u62cd\u7167\u6210\u529f\u7684\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u4e00\u822c\u9700\u8981\u8bb0\u5f55\u4e0b\u4f20\u9012\u7684 uri \u4fbf\u4e8e\u4f7f\u7528\u62cd\u6444\u7684\u7167\u7247\u3002 \u5bf9\u4e8e\u56de\u8c03\u4e2d\u7684\u5904\u7406\u662f\u8fd9\u6837\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u62ff\u5230\u662f\u5426\u62cd\u6444\u6210\u529f\u7684\u4fe1\u606f\uff0c\u5982\u679c\u62cd\u6444\u6210\u529f\uff0c\u4e4b\u524d\u8bb0\u5f55\u4e0b\u7684 uri \u5c31\u80fd\u52a0\u8f7d\u51fa\u56fe\u7247\u4e86\u3002 val filename = \" ${ System . currentTimeMillis () } .jpg\" val imageUri = if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . Q ) { MediaStore . Images . Media . getContentUri ( MediaStore . VOLUME_EXTERNAL_PRIMARY ) } else { MediaStore . Images . Media . EXTERNAL_CONTENT_URI } val imageDetails = ContentValues (). apply { put ( MediaStore . Images . Media . DISPLAY_NAME , filename ) } context . contentResolver . insert ( imageUri , imageDetails ). let { takenPictureUri = it launcherFromCamera . launch ( takenPictureUri ) } \u5bf9\u4e8e\u4f20\u9012\u7684 uri \uff0c\u6211\u4eec\u9700\u8981\u5148\u81ea\u5df1\u6784\u5efa\u51fa\uff0c\u8fd9\u91cc\u6211\u4eec\u6307\u5b9a\u51fa\u6587\u4ef6\u540d\u5e76\u586b\u5145\u5373\u53ef\u3002","title":"\u4ece\u76f8\u673a\u62cd\u4e00\u5f20\uff1f"},{"location":"android/activity-result-contracts/#\u53c2\u8003","text":"\u518d\u89c1\uff01onActivityResult\uff01\u4f60\u597d\uff0cActivity Results API\uff01","title":"\u53c2\u8003"},{"location":"android/shared-data-storage/","text":"\u5171\u4eab\u5b58\u50a8\u7a7a\u95f4 \u5982\u4f55\u4ea4\u4e92\u83b7\u53d6\u5230\u7684 uri \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 contentResolver \u6765\u6253\u5f00 uri \u7684\u8f93\u5165\u6d41\uff0c\u7136\u540e\u5bf9\u4e8e\u6d41\u8fdb\u884c\u64cd\u4f5c\u3002 val resolver = applicationContext . contentResolver resolver . openInputStream ( content - uri ). use { stream -> } \u67e5\u8be2\u5b58\u50a8\u7a7a\u95f4\u5bf9\u5e94\u7684\u6587\u4ef6\u4fe1\u606f \u901a\u8fc7 contentResolver \u6309\u9700\u83b7\u53d6\u5230\u5bf9\u5e94\u7684 Cursor \u6211\u4eec\u5df2\u7ecf\u62ff\u5230 uri \u7684\u8bdd\u5e76\u4e14\u53ea\u5e0c\u671b\u67e5\u8be2\u5bf9\u5e94\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f20\u9012 uri \u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5426\u5219\u4f20\u9012 MediaStore.Images.Media.EXTERNAL_CONTENT_URI \u6765\u67e5\u8be2\u5168\u90e8\u6570\u636e\uff08\u8fd9\u91cc\u4ee5\u67e5\u8be2\u56fe\u50cf\u4e3a\u793a\u4f8b\uff09 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u9012\u6211\u4eec\u5e0c\u671b\u67e5\u8be2\u7684\u6570\u636e\u7c7b\u578b\u7684\u6570\u7ec4\uff08\u8fd9\u91cc\u5047\u8bbe\u6211\u4eec\u53ea\u9700\u8981\u62ff\u5230\u6587\u4ef6\u540d\uff09 \u7b2c\u4e09\u56db\u4e2a\u53c2\u6570\u5bf9\u5e94\u67e5\u8be2\u8bed\u53e5\u548c\u8bed\u53e5\u4e2d\u7684\u53d8\u91cf\uff0c\u7b2c\u4e94\u4e2a\u53c2\u6570\u4e3a\u6392\u5e8f\u65b9\u5f0f\u3002\u53ea\u662f\u67e5\u8be2\u5bf9\u5e94\u6587\u4ef6\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u7559\u4e3a\u7a7a\u5373\u53ef val cursor = resolver . query ( uri , arrayOf ( MediaStore . Images . Media . DISPLAY_NAME ), null , null , null ) \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u67e5\u8be2\u4e86\uff0c\u6211\u4eec\u5148\u7f13\u5b58\u4e0b\u6570\u636e\u5e93\u4e2d\u5bf9\u5e94\u7684\u884c\uff0c\u7136\u540e\u83b7\u53d6\u5bf9\u5e94\u884c\u7684\u503c\u3002\u8fd9\u91cc\u6211\u4eec\u786e\u5b9a\u67e5\u8be2\u5bf9\u5e94\u7684\u6587\u4ef6\u4fe1\u606f\uff0c\u5982\u679c\u662f\u83b7\u53d6\u591a\u4e2a\u6587\u4ef6\u6570\u636e\u7684\u8bdd\uff0c\u5c31\u6539\u4e3a while (cursor.moveToNext()) \u5373\u53ef\uff0c\u6301\u7eed\u83b7\u53d6\u6570\u636e cursor ?. use { val columnIndex = cursor . getColumnIndexOrThrow ( MediaStore . Images . Media . DISPLAY_NAME ) if ( cursor . moveToFirst ()) { if ( columnIndex > - 1 ) { fileName = cursor . getString ( columnIndex ) } } } \u5982\u679c\u6211\u4eec\u662f\u5728\u65e0 uri \u7684\u60c5\u51b5\u4e0b\uff0c\u67e5\u8be2\u6240\u9700\u7684\u591a\u4e2a\u6587\u4ef6\uff0c\u90a3\u6211\u4eec\u5e94\u8be5\u9700\u8981\u62ff\u5230\u6587\u4ef6\u7684 uri \u3002\u8981\u5b9e\u73b0\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u5148\u67e5\u8be2\u5230 id \uff0c\u7136\u540e\u5c06 id \u9644\u52a0\u5230\u5185\u5bb9 uri \u6765\u83b7\u53d6\u5230\u6587\u4ef6\u7684 uri val contentUri = ContentUris . withAppendedId ( MediaStore . Images . Media . EXTERNAL_CONTENT_URI , id ) \u5728\u5e94\u7528\u4e2d\u6267\u884c\u6b64\u7c7b\u67e5\u8be2\u65f6\uff0c\u8bf7\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a \u5728\u5de5\u4f5c\u7ebf\u7a0b\u4e2d\u8c03\u7528 query() \u65b9\u6cd5\u3002 \u7f13\u5b58\u5217\u7d22\u5f15\uff0c\u4ee5\u514d\u6bcf\u6b21\u5904\u7406\u67e5\u8be2\u7ed3\u679c\u4e2d\u7684\u884c\u65f6\u90fd\u9700\u8981\u8c03\u7528 getColumnIndexOrThrow()\u3002 \u5c06 ID \u9644\u52a0\u5230\u5185\u5bb9 URI\uff0c\u5982\u4ee3\u7801\u6bb5\u6240\u793a\u3002 \u642d\u8f7d Android 10 \u53ca\u66f4\u9ad8\u7248\u672c\u7684\u8bbe\u5907\u9700\u8981\u5728 MediaStore API \u4e2d\u5b9a\u4e49\u7684\u5217\u540d\u79f0\u3002\u5982\u679c\u5e94\u7528\u4e2d\u7684\u67d0\u4e2a\u4f9d\u8d56\u5e93\u9700\u8981 API \u4e2d\u672a\u5b9a\u4e49\u7684\u5217\u540d\u79f0\uff08\u4f8b\u5982 \"MimeType\"\uff09\uff0c\u8bf7\u4f7f\u7528 CursorWrapper \u5728\u5e94\u7528\u7684\u8fdb\u7a0b\u4e2d\u52a8\u6001\u8f6c\u6362\u5217\u540d\u79f0\u3002","title":"\u5171\u4eab\u5b58\u50a8\u7a7a\u95f4"},{"location":"android/shared-data-storage/#\u5171\u4eab\u5b58\u50a8\u7a7a\u95f4","text":"","title":"\u5171\u4eab\u5b58\u50a8\u7a7a\u95f4"},{"location":"android/shared-data-storage/#\u5982\u4f55\u4ea4\u4e92\u83b7\u53d6\u5230\u7684-uri","text":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 contentResolver \u6765\u6253\u5f00 uri \u7684\u8f93\u5165\u6d41\uff0c\u7136\u540e\u5bf9\u4e8e\u6d41\u8fdb\u884c\u64cd\u4f5c\u3002 val resolver = applicationContext . contentResolver resolver . openInputStream ( content - uri ). use { stream -> }","title":"\u5982\u4f55\u4ea4\u4e92\u83b7\u53d6\u5230\u7684 uri"},{"location":"android/shared-data-storage/#\u67e5\u8be2\u5b58\u50a8\u7a7a\u95f4\u5bf9\u5e94\u7684\u6587\u4ef6\u4fe1\u606f","text":"\u901a\u8fc7 contentResolver \u6309\u9700\u83b7\u53d6\u5230\u5bf9\u5e94\u7684 Cursor \u6211\u4eec\u5df2\u7ecf\u62ff\u5230 uri \u7684\u8bdd\u5e76\u4e14\u53ea\u5e0c\u671b\u67e5\u8be2\u5bf9\u5e94\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f20\u9012 uri \u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5426\u5219\u4f20\u9012 MediaStore.Images.Media.EXTERNAL_CONTENT_URI \u6765\u67e5\u8be2\u5168\u90e8\u6570\u636e\uff08\u8fd9\u91cc\u4ee5\u67e5\u8be2\u56fe\u50cf\u4e3a\u793a\u4f8b\uff09 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u9012\u6211\u4eec\u5e0c\u671b\u67e5\u8be2\u7684\u6570\u636e\u7c7b\u578b\u7684\u6570\u7ec4\uff08\u8fd9\u91cc\u5047\u8bbe\u6211\u4eec\u53ea\u9700\u8981\u62ff\u5230\u6587\u4ef6\u540d\uff09 \u7b2c\u4e09\u56db\u4e2a\u53c2\u6570\u5bf9\u5e94\u67e5\u8be2\u8bed\u53e5\u548c\u8bed\u53e5\u4e2d\u7684\u53d8\u91cf\uff0c\u7b2c\u4e94\u4e2a\u53c2\u6570\u4e3a\u6392\u5e8f\u65b9\u5f0f\u3002\u53ea\u662f\u67e5\u8be2\u5bf9\u5e94\u6587\u4ef6\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u7559\u4e3a\u7a7a\u5373\u53ef val cursor = resolver . query ( uri , arrayOf ( MediaStore . Images . Media . DISPLAY_NAME ), null , null , null ) \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u67e5\u8be2\u4e86\uff0c\u6211\u4eec\u5148\u7f13\u5b58\u4e0b\u6570\u636e\u5e93\u4e2d\u5bf9\u5e94\u7684\u884c\uff0c\u7136\u540e\u83b7\u53d6\u5bf9\u5e94\u884c\u7684\u503c\u3002\u8fd9\u91cc\u6211\u4eec\u786e\u5b9a\u67e5\u8be2\u5bf9\u5e94\u7684\u6587\u4ef6\u4fe1\u606f\uff0c\u5982\u679c\u662f\u83b7\u53d6\u591a\u4e2a\u6587\u4ef6\u6570\u636e\u7684\u8bdd\uff0c\u5c31\u6539\u4e3a while (cursor.moveToNext()) \u5373\u53ef\uff0c\u6301\u7eed\u83b7\u53d6\u6570\u636e cursor ?. use { val columnIndex = cursor . getColumnIndexOrThrow ( MediaStore . Images . Media . DISPLAY_NAME ) if ( cursor . moveToFirst ()) { if ( columnIndex > - 1 ) { fileName = cursor . getString ( columnIndex ) } } } \u5982\u679c\u6211\u4eec\u662f\u5728\u65e0 uri \u7684\u60c5\u51b5\u4e0b\uff0c\u67e5\u8be2\u6240\u9700\u7684\u591a\u4e2a\u6587\u4ef6\uff0c\u90a3\u6211\u4eec\u5e94\u8be5\u9700\u8981\u62ff\u5230\u6587\u4ef6\u7684 uri \u3002\u8981\u5b9e\u73b0\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u5148\u67e5\u8be2\u5230 id \uff0c\u7136\u540e\u5c06 id \u9644\u52a0\u5230\u5185\u5bb9 uri \u6765\u83b7\u53d6\u5230\u6587\u4ef6\u7684 uri val contentUri = ContentUris . withAppendedId ( MediaStore . Images . Media . EXTERNAL_CONTENT_URI , id ) \u5728\u5e94\u7528\u4e2d\u6267\u884c\u6b64\u7c7b\u67e5\u8be2\u65f6\uff0c\u8bf7\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a \u5728\u5de5\u4f5c\u7ebf\u7a0b\u4e2d\u8c03\u7528 query() \u65b9\u6cd5\u3002 \u7f13\u5b58\u5217\u7d22\u5f15\uff0c\u4ee5\u514d\u6bcf\u6b21\u5904\u7406\u67e5\u8be2\u7ed3\u679c\u4e2d\u7684\u884c\u65f6\u90fd\u9700\u8981\u8c03\u7528 getColumnIndexOrThrow()\u3002 \u5c06 ID \u9644\u52a0\u5230\u5185\u5bb9 URI\uff0c\u5982\u4ee3\u7801\u6bb5\u6240\u793a\u3002 \u642d\u8f7d Android 10 \u53ca\u66f4\u9ad8\u7248\u672c\u7684\u8bbe\u5907\u9700\u8981\u5728 MediaStore API \u4e2d\u5b9a\u4e49\u7684\u5217\u540d\u79f0\u3002\u5982\u679c\u5e94\u7528\u4e2d\u7684\u67d0\u4e2a\u4f9d\u8d56\u5e93\u9700\u8981 API \u4e2d\u672a\u5b9a\u4e49\u7684\u5217\u540d\u79f0\uff08\u4f8b\u5982 \"MimeType\"\uff09\uff0c\u8bf7\u4f7f\u7528 CursorWrapper \u5728\u5e94\u7528\u7684\u8fdb\u7a0b\u4e2d\u52a8\u6001\u8f6c\u6362\u5217\u540d\u79f0\u3002","title":"\u67e5\u8be2\u5b58\u50a8\u7a7a\u95f4\u5bf9\u5e94\u7684\u6587\u4ef6\u4fe1\u606f"},{"location":"jetpack-compose/choose-photo/","text":"\u5982\u4f55\u9009\u62e9\u76f8\u518c\u56fe\u7247\u5e76\u5c55\u793a \u5173\u4e8e\u5728\u975e compose \u754c\u9762\u4e2d\u7684\u5199\u6cd5\uff0c\u53c2\u8003\u53e6\u5916\u4e00\u7bc7 ActivityResultContracts \u5373\u53ef\u3002 \u5feb\u8fdb\u5230\u6b63\u9898 \u4f46\u662f\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u7684\u662f compose \uff0c\u6ca1\u529e\u6cd5\u548c activity \u76f4\u63a5\u6253\u4ea4\u9053\u3002\u5b9e\u9645\u4e0a\u5728 compose \u4e2d\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u51fd\u6570 rememberLauncherForActivityResult \uff0c\u5199\u6cd5\u4e0a\u5b8c\u5168\u4e00\u81f4\u3002 val context = LocalContext . current var bitmap by remember { mutableStateOf < Bitmap?> ( null ) } val launcherFromPhotos = rememberLauncherForActivityResult ( ActivityResultContracts . GetContent ()) { bitmap = BitmapFactory . decodeStream ( context . contentResolver . openInputStream ( it )) } \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u5728 compose \u4e2d\u4f7f\u7528 LocalContext.current \u83b7\u53d6 context \u3002 \u7136\u540e\u6211\u4eec\u5c06 bitmap \u52a0\u8f7d\u5230 compose \u4e2d\u7684 Image \u7ec4\u4ef6\u5373\u53ef\uff0c\u6ce8\u610f\u4e0d\u8981\u4f7f\u7528 Icon \u8fd9\u4e2a\u7ec4\u4ef6\u3002 bitmap ?. let { Image ( bitmap = it . asImageBitmap (), contentDescription = \"\" ) }","title":"\u5982\u4f55\u9009\u62e9\u76f8\u518c\u56fe\u7247\u5e76\u5c55\u793a"},{"location":"jetpack-compose/choose-photo/#\u5982\u4f55\u9009\u62e9\u76f8\u518c\u56fe\u7247\u5e76\u5c55\u793a","text":"\u5173\u4e8e\u5728\u975e compose \u754c\u9762\u4e2d\u7684\u5199\u6cd5\uff0c\u53c2\u8003\u53e6\u5916\u4e00\u7bc7 ActivityResultContracts \u5373\u53ef\u3002","title":"\u5982\u4f55\u9009\u62e9\u76f8\u518c\u56fe\u7247\u5e76\u5c55\u793a"},{"location":"jetpack-compose/choose-photo/#\u5feb\u8fdb\u5230\u6b63\u9898","text":"\u4f46\u662f\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u7684\u662f compose \uff0c\u6ca1\u529e\u6cd5\u548c activity \u76f4\u63a5\u6253\u4ea4\u9053\u3002\u5b9e\u9645\u4e0a\u5728 compose \u4e2d\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u51fd\u6570 rememberLauncherForActivityResult \uff0c\u5199\u6cd5\u4e0a\u5b8c\u5168\u4e00\u81f4\u3002 val context = LocalContext . current var bitmap by remember { mutableStateOf < Bitmap?> ( null ) } val launcherFromPhotos = rememberLauncherForActivityResult ( ActivityResultContracts . GetContent ()) { bitmap = BitmapFactory . decodeStream ( context . contentResolver . openInputStream ( it )) } \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u5728 compose \u4e2d\u4f7f\u7528 LocalContext.current \u83b7\u53d6 context \u3002 \u7136\u540e\u6211\u4eec\u5c06 bitmap \u52a0\u8f7d\u5230 compose \u4e2d\u7684 Image \u7ec4\u4ef6\u5373\u53ef\uff0c\u6ce8\u610f\u4e0d\u8981\u4f7f\u7528 Icon \u8fd9\u4e2a\u7ec4\u4ef6\u3002 bitmap ?. let { Image ( bitmap = it . asImageBitmap (), contentDescription = \"\" ) }","title":"\u5feb\u8fdb\u5230\u6b63\u9898"},{"location":"retrofit/upload-file/","text":"\u4e0a\u4f20\u6587\u4ef6 Http \u4e2d\u662f\u4ec0\u4e48\u6837\u5b50 POST {{base_url}}/sys/common/upload HTTP / 1.1 Content-Type : multipart/form-data; boundary=----WebKitFormBoundary0Xlfh1skUlQI1Kqe ------WebKitFormBoundary0Xlfh1skUlQI1Kqe Content-Disposition: form-data; name=\"biz\" temp ------WebKitFormBoundary0Xlfh1skUlQI1Kqe Content-Disposition: form-data; name=\"file\"; filename=\"1_tDFPLaEDlaW5dtsfv4sd0A.png\" Content-Type: image/png < /Users/hyoban/Downloads/1_tDFPLaEDlaW5dtsfv4sd0A.png ------WebKitFormBoundary0Xlfh1skUlQI1Kqe-- \u6211\u4eec\u9700\u8981\u6307\u5b9a Content-Type \u4e3a multipart/form-data \uff0c\u5982\u679c\u5185\u5bb9\u5305\u542b\u591a\u6bb5\u7684\u8bdd\uff0c\u6211\u4eec\u9700\u8981\u6307\u5b9a\u5206\u5272\u7b26\uff0c\u6bcf\u6bb5\u5206\u9694\u7b26\u4e4b\u95f4\u5c31\u662f\u4e00\u6bb5\u6570\u636e\u3002\u6ce8\u610f\u5206\u9694\u7b26\u4e4b\u524d\u90fd\u6709\u591a\u4f59\u7684\u4e24\u4e2a -- \uff0c\u5c31\u548c\u6700\u540e\u4e00\u6bb5\u6570\u636e\u6700\u540e\u4e00\u6837\u3002 \u8fd9\u91cc\u6211\u4eec\u7b2c\u4e00\u6bb5\u662f\u666e\u901a\u952e\u503c\u5bf9\u6570\u636e\uff0c\u7b2c\u4e8c\u6bb5\u662f\u4e0a\u4f20\u7684\u6587\u4ef6\uff0c filename \u6307\u5b9a\u6587\u4ef6\u540d\u3002\u540e\u9762\u4e3b\u8981\u5185\u5bb9\u7684\u5b9e\u9645\u6570\u503c\u4e3a\u4e0a\u4f20\u6587\u4ef6\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u8fd9\u91cc\u662f\u4f7f\u7528 vscode \u7684 rest client \u63d2\u4ef6\u7684\u529f\u80fd\u3002 \u5b9a\u4e49 retrofit api \u63a5\u53e3 @Multipart @POST ( \"/sys/common/upload\" ) suspend fun uploadFile ( @Part ( \"biz\" ) biz : RequestBody , @Part file : MultipartBody . Part , ): UploadFileResponse \u4f7f\u7528 @Multipart \u6ce8\u89e3\u8868\u793a\u8bf7\u6c42\u4f53\u7684\u5185\u5bb9\u683c\u5f0f\u4e3a multi-part \uff0c\u8bf7\u6ce8\u610f\uff0c\u8fd9\u65f6\u6211\u4eec\u7684\u53c2\u6570\u5c31\u90fd\u8981\u52a0\u4e0a @Part \u7684\u6ce8\u89e3\u4e86\u3002 \u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u666e\u901a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u6307\u5b9a\u4e3a RequestBody \u7c7b\u578b\u5373\u53ef\uff0c\u800c\u6587\u4ef6\u7684\u8bdd\uff0c\u5c31\u9700\u8981 MultipartBody.Part \uff0c\u7a0d\u540e\u6211\u4eec\u5c06\u4f7f\u7528 createFormData \u65b9\u6cd5\u6765\u521b\u5efa formdata \u7684\u683c\u5f0f\u3002 Repository \u5c42\u8c03\u7528\u63a5\u53e3 suspend fun uploadFile ( inputStream : InputStream , fileName : String ) = flow { val requestFile = RequestBody . create ( MediaType . parse ( \"multipart/form-data\" ), inputStream . readBytes ()) val body = MultipartBody . Part . createFormData ( \"file\" , fileName , requestFile ) val biz = RequestBody . create ( MediaType . parse ( \"multipart/form-data\" ), \"temp\" ) emit ( api . uploadFile ( biz , body )) } \u5bf9\u4e8e\u6587\u4ef6\u7c7b\u578b\uff0c createFormData \u9700\u8981\u6211\u4eec\u4f20\u9012\u4e00\u4e2a RequestBody \u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6587\u4ef6\u7684\u5177\u4f53\u5185\u5bb9\u3002 Part createFormData ( String name , @Nullable String filename , RequestBody body ) \u6211\u4eec\u4f7f\u7528 create \u65b9\u6cd5\u6765\u521b\u5efa\uff0c\u8fd9\u91cc\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u5f0f\u3002\u4e00\u79cd\u662f\u901a\u8fc7\u8f93\u5165\u6d41\u8bfb\u5230 byte \u6570\u7ec4\uff0c\u4e00\u79cd\u662f\u76f4\u63a5\u4f20\u9012\u6587\u4ef6\u3002\u7531\u4e8e\u6211\u901a\u8fc7 SAF \u62ff\u5230\u7528\u6237\u9009\u62e9\u7684\u516c\u7528\u6587\u4ef6\uff0c\u53ea\u80fd\u62ff\u5230 uri \uff0c\u4e0d\u65b9\u4fbf\u8f6c\u5316\u4e3a\u6587\u4ef6\uff0c\u6240\u4ee5\u901a\u8fc7\u8f93\u5165\u6d41\u6765\u521b\u5efa\u3002 RequestBody create ( final @Nullable MediaType contentType , final byte [] content ) RequestBody create ( final @Nullable MediaType contentType , final File file ) \u6211\u4eec\u9700\u8981\u5c06\u8bf7\u6c42\u4f53\u7684\u683c\u5f0f\u90fd\u6307\u5b9a\u4e3a multipart/form-data \u3002 \u540e\u7eed \u540e\u9762\u6211\u4eec\u5c31\u4f9d\u636e\u9700\u8981\u7684\u53c2\u6570\u6765\u8c03\u7528\u65b9\u6cd5\u5373\u53ef\uff0c\u5bf9\u4e8e\u56fe\u7247\u76f8\u5173\u53ef\u4ee5\u770b\u6211\u5176\u4ed6\u7684\u6587\u7ae0\u3002 \u53c2\u8003 How to Upload Image file in Retrofit 2","title":"\u4e0a\u4f20\u6587\u4ef6"},{"location":"retrofit/upload-file/#\u4e0a\u4f20\u6587\u4ef6","text":"","title":"\u4e0a\u4f20\u6587\u4ef6"},{"location":"retrofit/upload-file/#http-\u4e2d\u662f\u4ec0\u4e48\u6837\u5b50","text":"POST {{base_url}}/sys/common/upload HTTP / 1.1 Content-Type : multipart/form-data; boundary=----WebKitFormBoundary0Xlfh1skUlQI1Kqe ------WebKitFormBoundary0Xlfh1skUlQI1Kqe Content-Disposition: form-data; name=\"biz\" temp ------WebKitFormBoundary0Xlfh1skUlQI1Kqe Content-Disposition: form-data; name=\"file\"; filename=\"1_tDFPLaEDlaW5dtsfv4sd0A.png\" Content-Type: image/png < /Users/hyoban/Downloads/1_tDFPLaEDlaW5dtsfv4sd0A.png ------WebKitFormBoundary0Xlfh1skUlQI1Kqe-- \u6211\u4eec\u9700\u8981\u6307\u5b9a Content-Type \u4e3a multipart/form-data \uff0c\u5982\u679c\u5185\u5bb9\u5305\u542b\u591a\u6bb5\u7684\u8bdd\uff0c\u6211\u4eec\u9700\u8981\u6307\u5b9a\u5206\u5272\u7b26\uff0c\u6bcf\u6bb5\u5206\u9694\u7b26\u4e4b\u95f4\u5c31\u662f\u4e00\u6bb5\u6570\u636e\u3002\u6ce8\u610f\u5206\u9694\u7b26\u4e4b\u524d\u90fd\u6709\u591a\u4f59\u7684\u4e24\u4e2a -- \uff0c\u5c31\u548c\u6700\u540e\u4e00\u6bb5\u6570\u636e\u6700\u540e\u4e00\u6837\u3002 \u8fd9\u91cc\u6211\u4eec\u7b2c\u4e00\u6bb5\u662f\u666e\u901a\u952e\u503c\u5bf9\u6570\u636e\uff0c\u7b2c\u4e8c\u6bb5\u662f\u4e0a\u4f20\u7684\u6587\u4ef6\uff0c filename \u6307\u5b9a\u6587\u4ef6\u540d\u3002\u540e\u9762\u4e3b\u8981\u5185\u5bb9\u7684\u5b9e\u9645\u6570\u503c\u4e3a\u4e0a\u4f20\u6587\u4ef6\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u8fd9\u91cc\u662f\u4f7f\u7528 vscode \u7684 rest client \u63d2\u4ef6\u7684\u529f\u80fd\u3002","title":"Http \u4e2d\u662f\u4ec0\u4e48\u6837\u5b50"},{"location":"retrofit/upload-file/#\u5b9a\u4e49-retrofit-api-\u63a5\u53e3","text":"@Multipart @POST ( \"/sys/common/upload\" ) suspend fun uploadFile ( @Part ( \"biz\" ) biz : RequestBody , @Part file : MultipartBody . Part , ): UploadFileResponse \u4f7f\u7528 @Multipart \u6ce8\u89e3\u8868\u793a\u8bf7\u6c42\u4f53\u7684\u5185\u5bb9\u683c\u5f0f\u4e3a multi-part \uff0c\u8bf7\u6ce8\u610f\uff0c\u8fd9\u65f6\u6211\u4eec\u7684\u53c2\u6570\u5c31\u90fd\u8981\u52a0\u4e0a @Part \u7684\u6ce8\u89e3\u4e86\u3002 \u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u666e\u901a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u6307\u5b9a\u4e3a RequestBody \u7c7b\u578b\u5373\u53ef\uff0c\u800c\u6587\u4ef6\u7684\u8bdd\uff0c\u5c31\u9700\u8981 MultipartBody.Part \uff0c\u7a0d\u540e\u6211\u4eec\u5c06\u4f7f\u7528 createFormData \u65b9\u6cd5\u6765\u521b\u5efa formdata \u7684\u683c\u5f0f\u3002","title":"\u5b9a\u4e49 retrofit api \u63a5\u53e3"},{"location":"retrofit/upload-file/#repository-\u5c42\u8c03\u7528\u63a5\u53e3","text":"suspend fun uploadFile ( inputStream : InputStream , fileName : String ) = flow { val requestFile = RequestBody . create ( MediaType . parse ( \"multipart/form-data\" ), inputStream . readBytes ()) val body = MultipartBody . Part . createFormData ( \"file\" , fileName , requestFile ) val biz = RequestBody . create ( MediaType . parse ( \"multipart/form-data\" ), \"temp\" ) emit ( api . uploadFile ( biz , body )) } \u5bf9\u4e8e\u6587\u4ef6\u7c7b\u578b\uff0c createFormData \u9700\u8981\u6211\u4eec\u4f20\u9012\u4e00\u4e2a RequestBody \u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6587\u4ef6\u7684\u5177\u4f53\u5185\u5bb9\u3002 Part createFormData ( String name , @Nullable String filename , RequestBody body ) \u6211\u4eec\u4f7f\u7528 create \u65b9\u6cd5\u6765\u521b\u5efa\uff0c\u8fd9\u91cc\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u5f0f\u3002\u4e00\u79cd\u662f\u901a\u8fc7\u8f93\u5165\u6d41\u8bfb\u5230 byte \u6570\u7ec4\uff0c\u4e00\u79cd\u662f\u76f4\u63a5\u4f20\u9012\u6587\u4ef6\u3002\u7531\u4e8e\u6211\u901a\u8fc7 SAF \u62ff\u5230\u7528\u6237\u9009\u62e9\u7684\u516c\u7528\u6587\u4ef6\uff0c\u53ea\u80fd\u62ff\u5230 uri \uff0c\u4e0d\u65b9\u4fbf\u8f6c\u5316\u4e3a\u6587\u4ef6\uff0c\u6240\u4ee5\u901a\u8fc7\u8f93\u5165\u6d41\u6765\u521b\u5efa\u3002 RequestBody create ( final @Nullable MediaType contentType , final byte [] content ) RequestBody create ( final @Nullable MediaType contentType , final File file ) \u6211\u4eec\u9700\u8981\u5c06\u8bf7\u6c42\u4f53\u7684\u683c\u5f0f\u90fd\u6307\u5b9a\u4e3a multipart/form-data \u3002","title":"Repository \u5c42\u8c03\u7528\u63a5\u53e3"},{"location":"retrofit/upload-file/#\u540e\u7eed","text":"\u540e\u9762\u6211\u4eec\u5c31\u4f9d\u636e\u9700\u8981\u7684\u53c2\u6570\u6765\u8c03\u7528\u65b9\u6cd5\u5373\u53ef\uff0c\u5bf9\u4e8e\u56fe\u7247\u76f8\u5173\u53ef\u4ee5\u770b\u6211\u5176\u4ed6\u7684\u6587\u7ae0\u3002","title":"\u540e\u7eed"},{"location":"retrofit/upload-file/#\u53c2\u8003","text":"How to Upload Image file in Retrofit 2","title":"\u53c2\u8003"}]}